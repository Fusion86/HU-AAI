random.seed
np.random.seed

np.genfromtxt
np.genfromtxt

for
....data_label_pairs.append
random.shuffle

network.=.NeuralNetwork()
....layers.append(InputLayer)
....for
........layers.append(PerceptronLayer)
....layers.append(PerceptronLayer)

print
print

for.iter.in.iterations
....print

....network.train
........for
............load_inputs

............feedforward
................for
....................for
........................node.update

............backpropagation_last_layer
................for
....................node.delta.=.node.activation_func_derivative(node.z).*.diff
............
............for
................backpropagation_other_layer
....................for
........................for
............................total.+=.node_j.delta.*.node_j.weights[i]
........................node.delta.=.node.activation_func_derivative(node.z).*.total

............update_weights_and_biases
................for
....................for
........................node.bias.+=.learning_factor.*.node.delta

........................for
............................node.weights[i].+=.learning_factor.*.node.delta.*.node_input.a

....network.validate
....network.validate

....x_data.append
....training_scores.append
....test_scores.append

plt.suptitle
plt.title
plt.plot
plt.plot
plt.xlabel
plt.ylabel
plt.legend
plt.savefig